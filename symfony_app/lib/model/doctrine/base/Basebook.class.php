<?php

/**
 * Basebook
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property Doctrine_Collection $Authors
 * @property Doctrine_Collection $Categories
 * @property Doctrine_Collection $comment
 * 
 * @method string              getTitle()      Returns the current record's "title" value
 * @method Doctrine_Collection getAuthors()    Returns the current record's "Authors" collection
 * @method Doctrine_Collection getCategories() Returns the current record's "Categories" collection
 * @method Doctrine_Collection getComment()    Returns the current record's "comment" collection
 * @method book                setTitle()      Sets the current record's "title" value
 * @method book                setAuthors()    Sets the current record's "Authors" collection
 * @method book                setCategories() Sets the current record's "Categories" collection
 * @method book                setComment()    Sets the current record's "comment" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basebook extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('book');
        $this->hasColumn('title', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('author as Authors', array(
             'refClass' => 'bookAuthor',
             'local' => 'book_id',
             'foreign' => 'author_id'));

        $this->hasMany('category as Categories', array(
             'refClass' => 'bookCategory',
             'local' => 'book_id',
             'foreign' => 'category_id'));

        $this->hasMany('comment', array(
             'local' => 'id',
             'foreign' => 'book'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'title',
             ),
             ));
        $this->actAs($sluggable0);
    }
}